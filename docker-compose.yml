services:
  redis:
    container_name: redis
    image: redis
#    expose:
#      - "6379"
    ports:
      - "6379:6379"
    networks:
      - single-tier

  db:
    container_name: djdb
    build:
      context: ./ext/db
      args:
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
    env_file:
      - .env
    # user: "${UID:-1000}:${UID:-1000}"
    restart: unless-stopped
    stop_signal: SIGINT
    volumes:
      - ./ext/db/data:/var/lib/postgresql/data:delegated
    environment:
      - PGDATA=/var/lib/postgresql/data/dbdata
    ports:
      - "5432:5432"
#    expose:
#      - "5432"
    networks:
      - single-tier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h db -p 5432 -U postgres"]
      timeout: 15s
      interval: 5s

  app:
    container_name: djapp
    user: "${UID:-1000}:${UID:-1000}"
    build: .
    env_file:
      - .env
    stop_signal: SIGINT
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
    ports:
      - "8000:8000"
#    expose:
#      - "8000"
    networks:
      - single-tier
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      IN_DOCKER: 1

  websrv:
    container_name: djx
    build: ./ext/nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
        - "80:80"
    networks:
      - single-tier

volumes:
  data:
    driver: local

networks:
  single-tier:
    enable_ipv6: false
  default:
    enable_ipv6: false
